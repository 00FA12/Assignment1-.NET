<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_post_logic_8cs" kind="file" language="C#">
    <compoundname>PostLogic.cs</compoundname>
    <innerclass refid="class_application_1_1_logic_1_1_post_logic" prot="public">Application::Logic::PostLogic</innerclass>
    <innernamespace refid="namespace_application">Application</innernamespace>
    <innernamespace refid="namespace_application_1_1_logic">Application::Logic</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_application_1_1_dao_interfaces" kindref="compound">Application.DaoInterfaces</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_application_1_1_logic_interfaces" kindref="compound">Application.LogicInterfaces</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_domain_1_1_d_t_os" kindref="compound">Domain.DTOs</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_domain_1_1_models" kindref="compound">Domain.Models</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_application_1_1_logic" kindref="compound">Application.Logic</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_application_1_1_logic_1_1_post_logic" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_application_1_1_logic_1_1_post_logic" kindref="compound">PostLogic</ref><sp/>:<sp/><ref refid="interface_application_1_1_logic_interfaces_1_1_i_post_logic" kindref="compound">IPostLogic</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="interface_application_1_1_dao_interfaces_1_1_i_post_dao" kindref="compound">IPostDao</ref><sp/>_postDao;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="interface_application_1_1_dao_interfaces_1_1_i_user_dao" kindref="compound">IUserDao</ref><sp/>_userDao;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_application_1_1_logic_1_1_post_logic_1ae9d745e7b6ba6fa1640d4e8ce3a8e782" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_application_1_1_logic_1_1_post_logic_1ae9d745e7b6ba6fa1640d4e8ce3a8e782" kindref="member">PostLogic</ref>(<ref refid="interface_application_1_1_dao_interfaces_1_1_i_post_dao" kindref="compound">IPostDao</ref><sp/>postDao,<sp/><ref refid="interface_application_1_1_dao_interfaces_1_1_i_user_dao" kindref="compound">IUserDao</ref><sp/>userDao)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_postDao<sp/>=<sp/>postDao;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_userDao<sp/>=<sp/>userDao;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_application_1_1_logic_1_1_post_logic_1ae81d3bffbdc15c670e4569043931a87d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task&lt;Post&gt;<sp/><ref refid="class_application_1_1_logic_1_1_post_logic_1ae81d3bffbdc15c670e4569043931a87d" kindref="member">CreateAsync</ref>(<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o" kindref="compound">PostCreationDTO</ref><sp/>postToCreate)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_domain_1_1_models_1_1_post" kindref="compound">Post</ref>?<sp/>existing<sp/>=<sp/>await<sp/>_postDao.GetByTitle(postToCreate.<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o_1ae246b2d8743307f3df46f0208ba40ace" kindref="member">title</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_domain_1_1_models_1_1_post" kindref="compound">Post</ref>?<sp/>existing2<sp/>=<sp/>await<sp/>_postDao.GetByBody(postToCreate.<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o_1ac5714b58f43d510ae4a89354533df4e9" kindref="member">body</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_domain_1_1_models_1_1_user" kindref="compound">User</ref>?<sp/>user<sp/>=<sp/>await<sp/>_userDao.GetByIdAsync(postToCreate.<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o_1a84a660bec415f367a1300fed4ccae352" kindref="member">ownerID</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(postToCreate.<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o_1ae246b2d8743307f3df46f0208ba40ace" kindref="member">title</ref>.Equals(existing?.<ref refid="class_domain_1_1_models_1_1_post_1acea6a880eee3494ecd5f4ee0d161ee46" kindref="member">title</ref>)<sp/>&amp;&amp;<sp/>postToCreate.<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o_1ac5714b58f43d510ae4a89354533df4e9" kindref="member">body</ref>.Equals(existing2?.<ref refid="class_domain_1_1_models_1_1_post_1a8979dc8760b482d0ebf54c827321b1d4" kindref="member">body</ref>)<sp/>&amp;&amp;<sp/>postToCreate.<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o_1a84a660bec415f367a1300fed4ccae352" kindref="member">ownerID</ref>.Equals(user?.<ref refid="class_domain_1_1_models_1_1_user_1a07bcf0285d4c94a2028c96074f23fd59" kindref="member">id</ref>))</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;This<sp/>post<sp/>already<sp/>exists&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValidateData(postToCreate);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_domain_1_1_models_1_1_post" kindref="compound">Post</ref><sp/>toCreate<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_domain_1_1_models_1_1_post" kindref="compound">Post</ref>(user,<sp/>postToCreate.<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o_1ae246b2d8743307f3df46f0208ba40ace" kindref="member">title</ref>,<sp/>postToCreate.<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o_1ac5714b58f43d510ae4a89354533df4e9" kindref="member">body</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_domain_1_1_models_1_1_post" kindref="compound">Post</ref><sp/>created<sp/>=<sp/>await<sp/>_postDao.CreateAsync(toCreate);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>created;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_application_1_1_logic_1_1_post_logic_1a37e06f6c43a9a10d46d8cebaa3293f13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Task&lt;IEnumerable&lt;Post&gt;&gt;<sp/><ref refid="class_application_1_1_logic_1_1_post_logic_1a37e06f6c43a9a10d46d8cebaa3293f13" kindref="member">GetAsync</ref>(<ref refid="class_domain_1_1_d_t_os_1_1_search_post_parameters_dto" kindref="compound">SearchPostParametersDto</ref><sp/>searchPostParametersDto)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_postDao.GetAsync(searchPostParametersDto);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_application_1_1_logic_1_1_post_logic_1acec755b2620880b6df341d7519416edf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_application_1_1_logic_1_1_post_logic_1acec755b2620880b6df341d7519416edf" kindref="member">UpdateAsync</ref>(<ref refid="class_domain_1_1_d_t_os_1_1_post_edit_dto" kindref="compound">PostEditDto</ref><sp/>post)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_domain_1_1_models_1_1_post" kindref="compound">Post</ref>?<sp/>toEdit<sp/>=<sp/>await<sp/>_postDao.GetByIdAsync(post.<ref refid="class_domain_1_1_d_t_os_1_1_post_edit_dto_1aeeda045b9049e35db89281fd4306ef59" kindref="member">postId</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toEdit<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception($</highlight><highlight class="stringliteral">&quot;The<sp/>post<sp/>with<sp/>id:<sp/>{post.postId}<sp/>doesn&apos;t<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_domain_1_1_models_1_1_user" kindref="compound">User</ref>?<sp/>user<sp/>=<sp/>await<sp/>_userDao.GetByIdAsync(post.<ref refid="class_domain_1_1_d_t_os_1_1_post_edit_dto_1afa9543c2fff4a4f8838562d624cd89dc" kindref="member">ownerId</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(user<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception($</highlight><highlight class="stringliteral">&quot;User<sp/>with<sp/>id:<sp/>{post.ownerId}<sp/>doesn&apos;t<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_domain_1_1_models_1_1_post" kindref="compound">Post</ref><sp/>edited<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_domain_1_1_models_1_1_post" kindref="compound">Post</ref>(user,<sp/>post.<ref refid="class_domain_1_1_d_t_os_1_1_post_edit_dto_1a0f6fafadf61fe69209663ce40f228161" kindref="member">newTitle</ref>,<sp/>post.<ref refid="class_domain_1_1_d_t_os_1_1_post_edit_dto_1a16c33a4da83c9175b58f307366990156" kindref="member">newBody</ref>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edited<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>toEdit.id</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validatePost(edited);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>_postDao.UpdateAsync(edited);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_application_1_1_logic_1_1_post_logic_1ad1ef28d5184eac3ff03a5d79fac7db8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task&lt;PostBasicDto&gt;<sp/><ref refid="class_application_1_1_logic_1_1_post_logic_1ad1ef28d5184eac3ff03a5d79fac7db8e" kindref="member">GetByIdAsync</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_domain_1_1_models_1_1_post" kindref="compound">Post</ref>?<sp/>post<sp/>=<sp/>await<sp/>_postDao.GetByIdAsync(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(post<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception($</highlight><highlight class="stringliteral">&quot;Post<sp/>with<sp/>id<sp/>{id}<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_domain_1_1_d_t_os_1_1_post_basic_dto" kindref="compound">PostBasicDto</ref>(post.<ref refid="class_domain_1_1_models_1_1_post_1a86af36daa4e3047694d262facbfa2db5" kindref="member">author</ref>,<sp/>post.<ref refid="class_domain_1_1_models_1_1_post_1acea6a880eee3494ecd5f4ee0d161ee46" kindref="member">title</ref>,<sp/>post.<ref refid="class_domain_1_1_models_1_1_post_1a8979dc8760b482d0ebf54c827321b1d4" kindref="member">body</ref>,<sp/>post.<ref refid="class_domain_1_1_models_1_1_post_1ad183eb1b75d4986760913d31453a7004" kindref="member">upVote</ref>,<sp/>post.<ref refid="class_domain_1_1_models_1_1_post_1a57f0318c446b7f16c82ac5da77d37f45" kindref="member">downVote</ref>,<sp/>post.<ref refid="class_domain_1_1_models_1_1_post_1ac042f7daac2f112c2cff3c2293b5c807" kindref="member">edited</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>validatePost(<ref refid="class_domain_1_1_models_1_1_post" kindref="compound">Post</ref><sp/>post)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>title<sp/>=<sp/>post.<ref refid="class_domain_1_1_models_1_1_post_1acea6a880eee3494ecd5f4ee0d161ee46" kindref="member">title</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>body<sp/>=<sp/>post.<ref refid="class_domain_1_1_models_1_1_post_1a8979dc8760b482d0ebf54c827321b1d4" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(title.Length<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Title<sp/>must<sp/>be<sp/>at<sp/>least<sp/>3<sp/>characters<sp/>long!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(title.Length<sp/>&gt;<sp/>100)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Title<sp/>must<sp/>be<sp/>less<sp/>that<sp/>100<sp/>characters<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(body.Length<sp/>&gt;<sp/>1000)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Body<sp/>must<sp/>be<sp/>less<sp/>than<sp/>1000<sp/>characters<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ValidateData(<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o" kindref="compound">PostCreationDTO</ref><sp/>postToCreate)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>title<sp/>=<sp/>postToCreate.<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o_1ae246b2d8743307f3df46f0208ba40ace" kindref="member">title</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>body<sp/>=<sp/>postToCreate.<ref refid="class_domain_1_1_d_t_os_1_1_post_creation_d_t_o_1ac5714b58f43d510ae4a89354533df4e9" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(title.Length<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Title<sp/>must<sp/>be<sp/>at<sp/>least<sp/>3<sp/>characters<sp/>long!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(title.Length<sp/>&gt;<sp/>100)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Title<sp/>must<sp/>be<sp/>less<sp/>that<sp/>100<sp/>characters<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(body.Length<sp/>&gt;<sp/>1000)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Body<sp/>must<sp/>be<sp/>less<sp/>than<sp/>1000<sp/>characters<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Application/Logic/PostLogic.cs"/>
  </compounddef>
</doxygen>
